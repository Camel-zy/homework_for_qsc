image: harbor.zjuqsc.com/accelerated/docker:stable

services:
  - name: harbor.zjuqsc.com/accelerated/docker:dind
    alias: docker

stages:
  - scan
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  HOST: harbor.zjuqsc.com
  REPO: rop-neo/rop-neo-service

# if docker command present, run docker login
before_script:
  - which docker && docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD harbor.zjuqsc.com

  # black magic to generate new tag (as well as retrive the latest tag for cache)
  - 'TAGDATE=`date +%Y%m%d`; OLDTAGS=$(wget -q -O- --header "Authorization: $(echo -n "$DOCKER_USERNAME:$DOCKER_PASSWORD" | base64)" https://$HOST/v2/$REPO/tags/list | sed -e "s:{\"name\"\:\"$REPO\",\"tags\"\:\[\(.*\)\]}:\1:" -e "s/\"//g"); LATEST_OLDTAG=$(echo $OLDTAGS | sed -e "s/,/\\n/g" | sort -ur | grep -E "^$TAGDATE" | head -n 1 || true); LATEST_TAG=$(echo $OLDTAGS | sed -e "s/,/\\n/g" | sort -ur | head -n 1 || true); TAGVERSION=1; [[ ! -z $LATEST_OLDTAG ]] && TAGVERSION=$(($LATEST_OLDTAG % 100 + 1)); [[ ${#TAGVERSION} -lt 2 ]] && TAGVERSION=0$TAGVERSION; TAG=$TAGDATE$TAGVERSION'
  - FULLTAG=$HOST/$REPO:$TAG
  - CACHETAG=$HOST/$REPO:$LATEST_TAG

  # generate docker-build cache args
  - '[[ ! -z $LATEST_TAG ]] && CACHE_ARGS="--cache-from $CACHETAG" || CACHE_ARGS='

sonarqube-check:
  stage: scan
  only:
    - "merge_requests" # keyword, for pipelines created when a merge request is created or updated
    - master
  image:
    name: harbor.zjuqsc.com/accelerated/sonar_scanner_cli:go1.15
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    GOMODCACHE: "${CI_PROJECT_DIR}/.cache/go-mod"
    # SONAR_TOKEN is set as protected masked CI variable
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
      - .cache/go-mod
  script:
    - go env -w GOPRIVATE="git.zjuqsc.com/rop/rop-sms"
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@git.zjuqsc.com/".insteadOf "https://git.zjuqsc.com/"
    - go test ./... -coverprofile=test-coverage.out -json > test-report.out
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME

build:
  only:
    - master
    - release
  stage: build
  tags:
    - docker
  script:
    # pull cache (if available)
    - '[[ -z $LATEST_TAG ]] && echo Building $FULLTAG without cache || (echo Building $FULLTAG cached from $CACHETAG && docker pull $CACHETAG || true)'

    # build image
    - docker build $CACHE_ARGS -t $FULLTAG -t $HOST/$REPO:latest --build-arg REPO_PASSWD=$CI_JOB_TOKEN --build-arg REPO_USER=gitlab-ci-token .

    # push image
    - docker push $FULLTAG
    - docker push $HOST/$REPO:latest

